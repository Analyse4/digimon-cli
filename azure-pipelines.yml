trigger:
  - master
#variables:
#  GOPATH: 'C:\\usr\\gopath'
#  GOBIN:  '$(GOPATH)/bin' # Go binaries path
#  modulePath: '$(GOPATH)/src/github.com/$(build.repository.name)' # Path to the module's code

stages:

  - stage: Build
    jobs:
      - job: Linux
        pool:
          vmImage: ubuntu-latest
        steps:
          - bash: |
              echo "##vso[task.setvariable variable=gopath]$(system.defaultWorkingDirectory)/gopath"
          - bash: |
              echo "##vso[task.setvariable variable=gobin]$(GOPATH)/bin"
          - bash: |
              echo "##vso[task.setvariable variable=modulepath]$(GOPATH)/src/github.com/$(build.repository.name)"
          - script: |
              mkdir -p $(GOBIN)
              mkdir -p $(GOPATH)/pkg
              mkdir -p $(MODULEPATH)
              shopt -s extglob
              shopt -s dotglob
              mv !(gopath) $(MODULEPATH)
              echo '##vso[task.prependpath]$(GOBIN)'
              echo '##vso[task.prependpath]$(GOROOT)/bin'
            displayName: 'Set up the Go workspace'

          - script: |
              go version
              go get -v -t -d ./...
              if [ -f Gopkg.toml ]; then
                  curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
                  dep ensure
              fi
              go install -v
            workingDirectory: '$(MODULEPATH)'
            displayName: 'Get dependencies, then build'
          - publish: $(GOBIN)
            artifact: LinuxBinary
      - job: MacOS
        pool:
          vmImage: macOS-latest
        steps:
          - bash: |
              echo "##vso[task.setvariable variable=gopath]$(system.defaultWorkingDirectory)/gopath"
          - bash: |
              echo "##vso[task.setvariable variable=gobin]$(GOPATH)/bin"
          - bash: |
              echo "##vso[task.setvariable variable=modulepath]$(GOPATH)/src/github.com/$(build.repository.name)"
          - script: |
              mkdir -p $(GOBIN)
              mkdir -p $(GOPATH)/pkg
              mkdir -p $(MODULEPATH)
              shopt -s extglob
              shopt -s dotglob
              mv !(gopath) $(MODULEPATH)
              echo '##vso[task.prependpath]$(GOBIN)'
              echo '##vso[task.prependpath]$(GOROOT)/bin'
            displayName: 'Set up the Go workspace'
          - script: |
              go version
              go get -v -t -d ./...
              if [ -f Gopkg.toml ]; then
                  curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
                  dep ensure
              fi
              go install -v
            workingDirectory: '$(MODULEPATH)'
            displayName: 'Get dependencies, then build'
          - publish: $(GOBIN)
            artifact: MacOSBinary
      - job: Windows
        pool:
          vmImage: windows-latest
        steps:
          - bash: |
              echo "##vso[task.setvariable variable=gopath]C:\\usr\\gopath"
          - bash: |
              echo "##vso[task.setvariable variable=gobin]$(GOPATH)/bin"
          - bash: |
              echo "##vso[task.setvariable variable=modulepath]$(GOPATH)/src/github.com/$(build.repository.name)"
          - bash: |
              mkdir -p $(GOBIN)
              mkdir -p $(GOPATH)/pkg
              mkdir -p $(MODULEPATH)
              shopt -s extglob
              shopt -s dotglob
              mv * $(MODULEPATH)
              echo '##vso[task.prependpath]$(GOBIN)'
              echo '##vso[task.prependpath]$(GOROOT)/bin'

              echo $(GOPATH)
              ls $(GOPATH)
            displayName: 'Set up the Go workspace'
          - bash: |
              cd $(MODULEPATH)
              go version
              go get -v -t -d ./...
              if [ -f Gopkg.toml ]; then
                  curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
                  dep ensure
              fi
              go install -v
            displayName: 'Get dependencies, then build'
          - publish: $(GOBIN)
            artifact: WindowsBinary