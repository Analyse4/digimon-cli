trigger:
  - master
variables:
  GOBIN:  '$(GOPATH)/bin' # Go binaries path
  GOROOT: '/usr/local/go1.11' # Go installation path
  GOPATH: '$(system.defaultWorkingDirectory)/gopath' # Go workspace path
  modulePath: '$(GOPATH)/src/github.com/$(build.repository.name)' # Path to the module's code

stages:

  - stage: Build
    jobs:

      - job: Linux
        pool:
          vmImage: ubuntu-latest
        steps:
          - script: |
              mkdir -p '$(GOBIN)'
              mkdir -p '$(GOPATH)/pkg'
              mkdir -p '$(modulePath)'
              shopt -s extglob
              shopt -s dotglob
              mv !(gopath) '$(modulePath)'
              echo '##vso[task.prependpath]$(GOBIN)'
              echo '##vso[task.prependpath]$(GOROOT)/bin'
            displayName: 'Set up the Go workspace'

          - script: |
              go version
              go get -v -t -d ./...
              if [ -f Gopkg.toml ]; then
                  curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
                  dep ensure
              fi
              go install -v
            workingDirectory: '$(modulePath)'
            displayName: 'Get dependencies, then build'
          - publish: $(GOBIN)/digimon-cli
            artifact: LinuxBinary

  - stage: Package
    jobs:

      - job: Linux
        pool:
          vmImage: ubuntu-latest
        steps:
          - download: current
            artifact: LinuxBinary
          - script: |
              set -euo pipefail
              BINARY="$PIPELINE_WORKSPACE/LinuxBinary/digimon-cli"
              chmod +x "$BINARY"
              mkdir digimon-cli
              cp "$BINARY" digimon-cli/digimon-cli
              tar cf digimon-cli-linux-amd64.tar trojan
              xz digimon-cli-linux-amd64.tar
            env:
              PIPELINE_WORKSPACE: $(Pipeline.Workspace)
          - publish: $(System.DefaultWorkingDirectory)/digimon-cli-linux-amd64.tar.xz
            artifact: LinuxRelease

  - stage: PubRelease
    jobs:

      - job: Release
        steps:
          - task: GithubRelease@0
            displayName: 'Create GitHub Release'
            inputs:
              gitHubConnection: release
              repositoryName: Analyse4/digimon-cli
              isPreRelease: true
              tagSource: 'manual'
              tag: '1.0.0-alpha.13'
              assets: $(Build.ArtifactStagingDirectory)/*